{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/info/Desktop/projects/viltis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _objectSpread from \"C:/Users/info/Desktop/projects/viltis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/info/Desktop/projects/viltis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\info\\\\Desktop\\\\projects\\\\viltis\\\\src\\\\components\\\\CustomFields.js\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _templateObject,\n    _templateObject2;\n\nimport styled from \"styled-components\";\nimport { useField } from \"formik\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var CustomField = function CustomField(_ref) {\n  _s();\n\n  var props = Object.assign({}, _ref);\n\n  var _useField = useField(props),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      meta = _useField2[1];\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledInput, _objectSpread(_objectSpread({}, field), props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, _this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\",\n        fontWeight: \"lighter\",\n        fontSize: \"12px\",\n        textAlign: \"center\"\n      },\n      children: meta.error.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, _this) : null]\n  }, void 0, true);\n};\n\n_s(CustomField, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = CustomField;\nexport var CustomTextArea = function CustomTextArea(_ref2) {\n  _s2();\n\n  var props = Object.assign({}, _ref2);\n\n  var _useField3 = useField(props),\n      _useField4 = _slicedToArray(_useField3, 2),\n      field = _useField4[0],\n      meta = _useField4[1];\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledTextArea, _objectSpread(_objectSpread({}, field), props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\",\n        fontWeight: \"lighter\",\n        fontSize: \"12px\",\n        textAlign: \"center\"\n      },\n      children: meta.error.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, _this) : null]\n  }, void 0, true);\n};\n\n_s2(CustomTextArea, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c2 = CustomTextArea;\nvar StyledInput = styled.input(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  border: 2px solid black;\\n  width: 100%;\\n  height: 50px;\\n  line-height: 50px;\\n  margin-top: 20px;\\n  padding-left: 10px;\\n\"])));\n_c3 = StyledInput;\nvar StyledTextArea = styled.textarea(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  border: 2px solid black;\\n  width: 100%;\\n  line-height: 50px;\\n  margin-top: 20px;\\n  padding-left: 10px;\\n\"])));\n_c4 = StyledTextArea;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CustomField\");\n$RefreshReg$(_c2, \"CustomTextArea\");\n$RefreshReg$(_c3, \"StyledInput\");\n$RefreshReg$(_c4, \"StyledTextArea\");","map":{"version":3,"sources":["C:/Users/info/Desktop/projects/viltis/src/components/CustomFields.js"],"names":["styled","useField","React","CustomField","props","field","meta","touched","error","color","fontWeight","fontSize","textAlign","toUpperCase","CustomTextArea","StyledInput","input","StyledTextArea","textarea"],"mappings":";;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAkB;AAAA;;AAAA,MAAZC,KAAY;;AAC3C,kBAAsBH,QAAQ,CAACG,KAAD,CAA9B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,IAAd;;AAEA,sBACE;AAAA,4BACE,QAAC,WAAD,kCAAiBD,KAAjB,GAA4BD,KAA5B;AAAA;AAAA;AAAA;AAAA,aADF,EAGGE,IAAI,CAACC,OAAL,IAAgBD,IAAI,CAACE,KAArB,gBACC;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,KADF;AAELC,QAAAA,UAAU,EAAE,SAFP;AAGLC,QAAAA,QAAQ,EAAE,MAHL;AAILC,QAAAA,SAAS,EAAE;AAJN,OADT;AAAA,gBAQGN,IAAI,CAACE,KAAL,CAAWK,WAAX;AARH;AAAA;AAAA;AAAA;AAAA,aADD,GAWG,IAdN;AAAA,kBADF;AAkBD,CArBM;;GAAMV,W;UACWF,Q;;;KADXE,W;AAuBb,OAAO,IAAMW,cAAc,GAAG,SAAjBA,cAAiB,QAAkB;AAAA;;AAAA,MAAZV,KAAY;;AAC9C,mBAAsBH,QAAQ,CAACG,KAAD,CAA9B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,IAAd;;AAEA,sBACE;AAAA,4BACE,QAAC,cAAD,kCAAoBD,KAApB,GAA+BD,KAA/B;AAAA;AAAA;AAAA;AAAA,aADF,EAGGE,IAAI,CAACC,OAAL,IAAgBD,IAAI,CAACE,KAArB,gBACC;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,KADF;AAELC,QAAAA,UAAU,EAAE,SAFP;AAGLC,QAAAA,QAAQ,EAAE,MAHL;AAILC,QAAAA,SAAS,EAAE;AAJN,OADT;AAAA,gBAQGN,IAAI,CAACE,KAAL,CAAWK,WAAX;AARH;AAAA;AAAA;AAAA;AAAA,aADD,GAWG,IAdN;AAAA,kBADF;AAkBD,CArBM;;IAAMC,c;UACWb,Q;;;MADXa,c;AAuBb,IAAMC,WAAW,GAAGf,MAAM,CAACgB,KAAV,sMAAjB;MAAMD,W;AASN,IAAME,cAAc,GAAGjB,MAAM,CAACkB,QAAV,uLAApB;MAAMD,c","sourcesContent":["import styled from \"styled-components\";\r\nimport { useField } from \"formik\";\r\nimport React from \"react\";\r\n\r\nexport const CustomField = ({ ...props }) => {\r\n  const [field, meta] = useField(props);\r\n\r\n  return (\r\n    <>\r\n      <StyledInput {...field} {...props} />\r\n\r\n      {meta.touched && meta.error ? (\r\n        <p\r\n          style={{\r\n            color: \"red\",\r\n            fontWeight: \"lighter\",\r\n            fontSize: \"12px\",\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          {meta.error.toUpperCase()}\r\n        </p>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const CustomTextArea = ({ ...props }) => {\r\n  const [field, meta] = useField(props);\r\n\r\n  return (\r\n    <>\r\n      <StyledTextArea {...field} {...props} />\r\n\r\n      {meta.touched && meta.error ? (\r\n        <p\r\n          style={{\r\n            color: \"red\",\r\n            fontWeight: \"lighter\",\r\n            fontSize: \"12px\",\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          {meta.error.toUpperCase()}\r\n        </p>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst StyledInput = styled.input`\r\n  border: 2px solid black;\r\n  width: 100%;\r\n  height: 50px;\r\n  line-height: 50px;\r\n  margin-top: 20px;\r\n  padding-left: 10px;\r\n`;\r\n\r\nconst StyledTextArea = styled.textarea`\r\n  border: 2px solid black;\r\n  width: 100%;\r\n  line-height: 50px;\r\n  margin-top: 20px;\r\n  padding-left: 10px;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}
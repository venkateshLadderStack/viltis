{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/info/Desktop/projects/viltis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"C:/Users/info/Desktop/projects/viltis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\info\\\\Desktop\\\\projects\\\\viltis\\\\src\\\\DS\\\\Button.js\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _templateObject;\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Button = function Button(_ref) {\n  _s();\n\n  var children = _ref.children,\n      handleClick = _ref.handleClick,\n      width = _ref.width,\n      reverse = _ref.reverse;\n\n  var _useState = useState(reverse ? \"black\" : \"white\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      btnColor = _useState2[0],\n      setBtnColor = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n    onClick: handleClick,\n    color: btnColor,\n    onMouseEnter: function onMouseEnter() {\n      return setBtnColor(reverse ? \"white\" : \"black\");\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setBtnColor(reverse ? \"black\" : \"white\");\n    },\n    width: width,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Button, \"1lsMnXL0IQhzN4LxY1OTWs2cnLU=\");\n\n_c = Button;\nexport default Button;\nvar ButtonWrapper = styled.button(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  width: \", \";\\n  height: 50px;\\n  background-color: \", \";\\n  font-weight: 600;\\n  font-size: 16px;\\n  border: \", \";\\n  cursor: pointer;\\n  color: \", \";\\n  transition-duration: 0.5s;\\n\"])), function (props) {\n  return props.width ? \"\".concat(props.width, \"px\") : \"100px\";\n}, function (props) {\n  return props.color ? props.color : \"white\";\n}, function (props) {\n  return props.color === \"black\" ? \"2px solid white\" : \"2px solid black\";\n}, function (props) {\n  return props.color === \"white\" ? \"black\" : \"white\";\n});\n_c2 = ButtonWrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"ButtonWrapper\");","map":{"version":3,"sources":["C:/Users/info/Desktop/projects/viltis/src/DS/Button.js"],"names":["React","useState","styled","Button","children","handleClick","width","reverse","btnColor","setBtnColor","ButtonWrapper","button","props","color"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAA+C;AAAA;;AAAA,MAA5CC,QAA4C,QAA5CA,QAA4C;AAAA,MAAlCC,WAAkC,QAAlCA,WAAkC;AAAA,MAArBC,KAAqB,QAArBA,KAAqB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAC5D,kBAAgCN,QAAQ,CAACM,OAAO,GAAG,OAAH,GAAa,OAArB,CAAxC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,sBACE,QAAC,aAAD;AACE,IAAA,OAAO,EAAEJ,WADX;AAEE,IAAA,KAAK,EAAEG,QAFT;AAGE,IAAA,YAAY,EAAE;AAAA,aAAMC,WAAW,CAACF,OAAO,GAAG,OAAH,GAAa,OAArB,CAAjB;AAAA,KAHhB;AAIE,IAAA,YAAY,EAAE;AAAA,aAAME,WAAW,CAACF,OAAO,GAAG,OAAH,GAAa,OAArB,CAAjB;AAAA,KAJhB;AAKE,IAAA,KAAK,EAAED,KALT;AAAA,cAOGF;AAPH;AAAA;AAAA;AAAA;AAAA,WADF;AAWD,CAdD;;GAAMD,M;;KAAAA,M;AAeN,eAAeA,MAAf;AAEA,IAAMO,aAAa,GAAGR,MAAM,CAACS,MAAV,gQACR,UAACC,KAAD;AAAA,SAAYA,KAAK,CAACN,KAAN,aAAiBM,KAAK,CAACN,KAAvB,UAAmC,OAA/C;AAAA,CADQ,EAGG,UAACM,KAAD;AAAA,SAAYA,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACC,KAApB,GAA4B,OAAxC;AAAA,CAHH,EAMP,UAACD,KAAD;AAAA,SACRA,KAAK,CAACC,KAAN,KAAgB,OAAhB,GAA0B,iBAA1B,GAA8C,iBADtC;AAAA,CANO,EASR,UAACD,KAAD;AAAA,SAAYA,KAAK,CAACC,KAAN,KAAgB,OAAhB,GAA0B,OAA1B,GAAoC,OAAhD;AAAA,CATQ,CAAnB;MAAMH,a","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = ({ children, handleClick, width, reverse }) => {\r\n  const [btnColor, setBtnColor] = useState(reverse ? \"black\" : \"white\");\r\n\r\n  return (\r\n    <ButtonWrapper\r\n      onClick={handleClick}\r\n      color={btnColor}\r\n      onMouseEnter={() => setBtnColor(reverse ? \"white\" : \"black\")}\r\n      onMouseLeave={() => setBtnColor(reverse ? \"black\" : \"white\")}\r\n      width={width}\r\n    >\r\n      {children}\r\n    </ButtonWrapper>\r\n  );\r\n};\r\nexport default Button;\r\n\r\nconst ButtonWrapper = styled.button`\r\n  width: ${(props) => (props.width ? `${props.width}px` : \"100px\")};\r\n  height: 50px;\r\n  background-color: ${(props) => (props.color ? props.color : \"white\")};\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n  border: ${(props) =>\r\n    props.color === \"black\" ? \"2px solid white\" : \"2px solid black\"};\r\n  cursor: pointer;\r\n  color: ${(props) => (props.color === \"white\" ? \"black\" : \"white\")};\r\n  transition-duration: 0.5s;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}